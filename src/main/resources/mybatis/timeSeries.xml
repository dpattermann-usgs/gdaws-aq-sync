<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 

<mapper namespace="gov.usgs.wma.gcmrc.mapper.TimeSeriesMapper">

	<resultMap id="TimeSeriesRecordMap" type="TimeSeriesRecord">
		<result property="siteId" column="SITE_ID"/>
		<result property="subsiteId" column="SUBSITE_ID"/>             
		<result property="groupId" column="GROUP_ID"/>             
		<result property="measurementDateIso" column="MEASUREMENT_DATE"/>       
		<result property="finalValue" column="FINAL_VALUE"/>             
		<result property="rawValue" column="RAW_VALUE"/>             
		<result property="mainQualifierId" column="MAIN_QUALIFIER_ID"/>             
		<result property="dataApprovalId" column="DATA_APPROVAL_ID"/>             
		<result property="measurementGradeId" column="MEASUREMENT_GRADE_ID"/>             
		<result property="deploymentId" column="DEPLOYMENT_ID"/>             
		<result property="iceAffectedId" column="ICE_AFFECTED_ID"/>             
		<result property="turbidityPegged" column="TURBIDITY_PEGGED"/>             
		<result property="probeTypeId" column="PROBE_TYPE_ID"/>             
		<result property="instrumentId" column="INSTRUMENT_ID"/>             
		<result property="dataLeadId" column="DATA_LEAD_ID"/>             
		<result property="rawFlagId" column="RAW_FLAG_ID"/>             
		<result property="dataQualificationId" column="DATA_QUALIFICATION_ID"/>             
		<result property="AccuracyRatingId" column="ACCURACY_RATING_ID"/>             
		<result property="sourceId" column="SOURCE_ID"/>    
		<result property="notes" column="NOTES"/>    
		<result property="erValue" column="ER_VALUE"/> 
	</resultMap>
	
	<select id="getCount" parameterType="map" resultType="int">
		SELECT
			count(*)
		FROM TIME_SERIES_STAR
			<include refid="whereAndOrder"/>
	</select>
	
	<select id="getTimeSeries" resultMap="TimeSeriesRecordMap" fetchSize="250000" >
		SELECT
			<include refid="timeSeriesColumns"/>
		FROM TIME_SERIES_STAR
			<include refid="whereAndOrder"/>
	</select>
	
	<sql id="whereAndOrder">
		<where>
			<if test="siteId != null">AND SITE_ID = '${siteId}'</if> 
			<if test="groupName != null">AND GROUP_ID = (SELECT DISTINCT(GROUP_ID) FROM GROUP_NAME WHERE NAME = '${groupName}')</if> 
		</where>
		ORDER BY SITE_ID, MEASUREMENT_DATE
	</sql>
	
	<sql id="timeSeriesColumns">
		SITE_ID,             
		SUBSITE_ID,             
		GROUP_ID,             
		TO_CHAR(MEASUREMENT_DATE, 'YYYY-MM-DD') || 'T' || TO_CHAR(MEASUREMENT_DATE,'HH24:MI:SS') MEASUREMENT_DATE,       
		FINAL_VALUE,             
		RAW_VALUE,             
		MAIN_QUALIFIER_ID,             
		DATA_APPROVAL_ID,             
		MEASUREMENT_GRADE_ID,             
		DEPLOYMENT_ID,             
		ICE_AFFECTED_ID,             
		TURBIDITY_PEGGED,             
		PROBE_TYPE_ID,             
		INSTRUMENT_ID,             
		DATA_LEAD_ID,             
		RAW_FLAG_ID,             
		DATA_QUALIFICATION_ID,             
		ACCURACY_RATING_ID,             
		SOURCE_ID,    
		NOTES, 
		ER_VALUE 
	</sql>
	
	<!-- Note: AQ -> GDAWS SQL and Strategy primarily taken from AutoProc I
		Strategy:
		 *   - INSERT time series into staging table
		 *   - DELETE data from main table already existing within the DateTime range of the input time seies
		 *   - INSERT staging table into main table
		 *   - Delete staging table records-->
		
	<!-- Insert data into Staging Table -->
	<insert id="insertTimeseriesDataToStageTable">
		INSERT ALL
		<foreach collection="records" item="element" index="index" >
		INTO TIME_SERIES_AP_STAGE (SITE_ID, GROUP_ID, MEASUREMENT_DATE, FINAL_VALUE, MAIN_QUALIFIER_ID, DATA_APPROVAL_ID, SOURCE_ID) 
			values (#{element.siteId,jdbcType=NUMERIC},#{element.groupId,jdbcType=NUMERIC},#{element.measurementDate,jdbcType=TIMESTAMP},#{element.finalValue,jdbcType=NUMERIC}, #{element.mainQualifierId,jdbcType=NUMERIC}, #{element.dataApprovalId,jdbcType=NUMERIC},#{element.sourceId,jdbcType=NUMERIC})
		</foreach>
		SELECT * FROM dual
	</insert>
		
	<!-- Delete data from Main Table already existing within the DateTime range of the input time series -->
	<delete id="deleteOverlappingDataInStarTable">
		DELETE From TIME_SERIES_STAR
			Where SITE_ID=#{siteId} And GROUP_ID=#{groupId} And SOURCE_ID=#{sourceId} And MEASUREMENT_DATE &gt;=#{startTime} And MEASUREMENT_DATE &lt;=#{endTime}
	</delete>
	
	<!-- From AutoProc I: 
		Hack alert: It is necessary to force Oracle to analyze the staging table bfore merging.  This seems to be a design issue of these star tables. 
		Note: This binds this class to the schema name (GDAWS_PROD) of the database. -->
	<select id="analyzeStageTable">
		begin dbms_stats.gather_table_stats('GDAWS', 'TIME_SERIES_AP_STAGE' , null, 100, false, 'FOR ALL COLUMNS SIZE AUTO', 1, 'ALL', true); end;
	</select>
	
	<!-- Insert Staging Table into Main Table -->
	<insert id="copyStageTableToStarTable">
		Insert Into TIME_SERIES_STAR(SITE_ID, GROUP_ID, MEASUREMENT_DATE, SOURCE_ID, FINAL_VALUE, MAIN_QUALIFIER_ID, DATA_APPROVAL_ID)
			Select SITE_ID, GROUP_ID, MEASUREMENT_DATE, SOURCE_ID, FINAL_VALUE, MAIN_QUALIFIER_ID, DATA_APPROVAL_ID
			From TIME_SERIES_AP_STAGE
			Where SOURCE_ID=#{sourceId}
			log errors into time_series_star_errlog('GdawsAutoProc') reject limit unlimited
	</insert>
	
	<!-- Delete Staging Table records -->
	<delete id="emptyStageTable">
		truncate table TIME_SERIES_AP_STAGE
	</delete>
</mapper>